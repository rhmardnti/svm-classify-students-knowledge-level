# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16p1GQyi2ZUmgxqCBemf1CipamfoRUrN5
"""

#import package yang akan digunakan
import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.svm import SVC

#Import data csv dan tampilkan ukuran dan nama atribut
df=pd.read_csv("case-3.csv", sep=';')
print("Ukuran dataset: ", df.shape)
print("Atribut: ", df.columns)
df.head()

#melihat tipe data
df.info()

from pandas.core.arrays import categorical
#Melakukan ordinal encoding untuk atribut UNS
from sklearn import preprocessing
from sklearn.preprocessing import OrdinalEncoder
!pip install category_encoders
import category_encoders as ce
encoder= ce.OrdinalEncoder(cols=[' UNS'],return_df=True, 
                           mapping=[{'col':' UNS',
                                     'mapping':{'very_low':0,'Low':1,'Middle':2,'High':3}}])
df_transformed = encoder.fit_transform(df)
df_transformed

#Memisahkan atribut independen dan dependen
independen=['STG', 'SCG', 'STR', 'LPR', 'PEG']
X = df[independen]
dependen=[' UNS']
y = df[dependen]

from sklearn.preprocessing import StandardScaler
 
# standarisasi nilai-nilai dari dataset
scaler = StandardScaler()
scaler.fit(X)
X = scaler.transform(X)

#Membagi data training dan testing
import sklearn
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)

from sklearn.svm import SVC
svc_model = SVC(kernel='linear', C=1E10)
svc_model.fit(X_train, y_train)
svc_Predicted = svc_model.predict(X_test)

print('Hasil prediksi:', svc_Predicted)
print('Data test', y_test)

mapping={'very_low':0,'Low':1,'Middle':2,'High':3}
from sklearn.metrics import confusion_matrix
conf_mat = confusion_matrix(y_test,svc_Predicted)
fig, ax = plt.subplots(figsize=(10,10))
sns.heatmap(conf_mat, annot=True, fmt='d',xticklabels=mapping, yticklabels=mapping)
plt.ylabel('Actual')
plt.xlabel('Predicted')
plt.show()

#import accuracy_score, precision_score, recall_score, f1_score
from sklearn.metrics import classification_report
print('\nClassification Report\n')
print(classification_report(y_test, svc_Predicted, 
                            target_names=['Very Low', 'Low', 'Middle', 'High']))